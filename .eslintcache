[{"/home/frol/Рабочий стол/FirstReactApp/first-app/src/index.js":"1","/home/frol/Рабочий стол/FirstReactApp/first-app/src/App.js":"2","/home/frol/Рабочий стол/FirstReactApp/first-app/src/service/firebase/firebase.js":"3","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Menunavbar/MenuNavbar.js":"4","/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Home/index.js":"5","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Footer/footer.js":"6","/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/index.js":"7","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Menunavbar/Menu/Menu.js":"8","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Menunavbar/Navbar/Navbar.js":"9","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/PokemonCardHome/PokemonCardHome.js":"10","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Layout/layout.js":"11","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Header/header.js":"12","/home/frol/Рабочий стол/FirstReactApp/first-app/src/context/pokemonContext.js":"13","/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/routes/start/Start.js":"14","/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/routes/finish/Finish.js":"15","/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/routes/board/Board.js":"16","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/PokemonCard/PokemonCard.js":"17","/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/routes/board/component/PlayerBoard/PlayerBoard.js":"18","/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/routes/finish/PlayerFinish/PlayerFinish.js":"19","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Result/index.js":"20","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/ArrowChoice/index.js":"21","/home/frol/Рабочий стол/FirstReactApp/first-app/src/store/store.js":"22","/home/frol/Рабочий стол/FirstReactApp/first-app/src/store/pokemon.js":"23","/home/frol/Рабочий стол/FirstReactApp/first-app/src/service/firebase/firebaseContext.js":"24","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Modal/Modal.js":"25","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/LoginForm/LoginForm.js":"26"},{"size":397,"mtime":1614716498108,"results":"27","hashOfConfig":"28"},{"size":1940,"mtime":1614719338951,"results":"29","hashOfConfig":"28"},{"size":1263,"mtime":1614719271333,"results":"30","hashOfConfig":"28"},{"size":1194,"mtime":1614729977123,"results":"31","hashOfConfig":"28"},{"size":1935,"mtime":1614724077824,"results":"32","hashOfConfig":"28"},{"size":351,"mtime":1612795058000,"results":"33","hashOfConfig":"28"},{"size":1897,"mtime":1613235068713,"results":"34","hashOfConfig":"28"},{"size":852,"mtime":1613049147323,"results":"35","hashOfConfig":"28"},{"size":801,"mtime":1614725733616,"results":"36","hashOfConfig":"28"},{"size":1930,"mtime":1614724046061,"results":"37","hashOfConfig":"28"},{"size":984,"mtime":1612795058000,"results":"38","hashOfConfig":"28"},{"size":728,"mtime":1614718778753,"results":"39","hashOfConfig":"28"},{"size":144,"mtime":1613220354647,"results":"40","hashOfConfig":"28"},{"size":2986,"mtime":1614721566991,"results":"41","hashOfConfig":"28"},{"size":1403,"mtime":1613504989875,"results":"42","hashOfConfig":"28"},{"size":5520,"mtime":1614678191799,"results":"43","hashOfConfig":"28"},{"size":1918,"mtime":1613287942884,"results":"44","hashOfConfig":"28"},{"size":1349,"mtime":1614008683005,"results":"45","hashOfConfig":"28"},{"size":1630,"mtime":1613561324451,"results":"46","hashOfConfig":"28"},{"size":785,"mtime":1614678305048,"results":"47","hashOfConfig":"28"},{"size":269,"mtime":1612963242000,"results":"48","hashOfConfig":"28"},{"size":185,"mtime":1614718802212,"results":"49","hashOfConfig":"28"},{"size":1140,"mtime":1614719618644,"results":"50","hashOfConfig":"28"},{"size":85,"mtime":1614721615170,"results":"51","hashOfConfig":"28"},{"size":1172,"mtime":1614728592638,"results":"52","hashOfConfig":"28"},{"size":964,"mtime":1614730536866,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"19rgu5f",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/frol/Рабочий стол/FirstReactApp/first-app/src/index.js",[],["109","110"],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/App.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/service/firebase/firebase.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Menunavbar/MenuNavbar.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Home/index.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Footer/footer.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/index.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Menunavbar/Menu/Menu.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Menunavbar/Navbar/Navbar.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/PokemonCardHome/PokemonCardHome.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Layout/layout.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Header/header.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/context/pokemonContext.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/routes/start/Start.js",["111"],"import { useState, useEffect, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport PokemonCard from '../../../../components/PokemonCard/PokemonCard';\nimport { PokemonContext } from '../../../../context/pokemonContext';\nimport cn from 'classnames';\n\nimport { selectPokemonsdata, selectPokemonsLoding, getPokemonsAsync } from '../../../../store/pokemon';\n\nimport s from './style.module.css';\n\nconst Start = () => {\n\n    const pokemonContext = useContext(PokemonContext);\n    const history = useHistory();\n    const isLoding = useSelector(selectPokemonsLoding);\n    const pokemonsRedux = useSelector(selectPokemonsdata);\n    const dispatch = useDispatch();\n\n    console.log('####: pokemonsRedux', pokemonsRedux);\n\n    const [pokemons, setPokemons] = useState({});\n\n    useEffect(() => {\n\n        dispatch(getPokemonsAsync());\n        pokemonContext.dischargeContext();\n\n    }, []);\n\n    useEffect(() => {\n        \n        setPokemons(pokemonsRedux);\n    }, [pokemonsRedux]);\n\n    const onCardClick = (key) => {\n\n        const pokemon = { ...pokemons[key] }\n        pokemonContext.selectPokemon(key, pokemon)\n\n\n        setPokemons(prevState => ({\n            ...prevState,\n            [key]: {\n                ...prevState[key],\n                selected: !prevState[key].selected,\n            }\n        }))\n\n    };\n\n    const hendleStart = () => {\n        history.push('/game/board');\n    }\n\n    const playerOneLengthState = Object.keys(pokemonContext.pokemons).length;\n\n    return (\n        <>\n\n            <div className={s.flex}>\n                <button className={cn(s.buttonContainern, s.container)}\n                    disabled={Object.keys(pokemonContext.pokemons).length < 5}\n                    onClick={hendleStart}>\n                    {playerOneLengthState < 5 ? `Chose ${5 - playerOneLengthState} pokemons!` : `Let's play!`}\n                </button>\n\n            </div>\n            <div className={s.flex}> \n            {isLoding ? <h1>Wait minute...</h1> : null}\n                {\n                    \n                    Object.entries(pokemons).map(([key, { type, img, name, id, values, selected }]) => <PokemonCard\n                        key={key}\n                        type={type}\n                        img={img}\n                        name={name}\n                        id={id}\n                        values={values}\n                        onCardClick={() => {\n                            if (Object.keys(pokemonContext.pokemons).length < 5 || selected) {\n                                onCardClick(key)\n                            }\n\n                        }}\n                        isActive={true}\n                        unicId={key}\n                        minimize={false}\n                        className={s.card}\n                        isSelected={selected}\n                    />)\n                }\n            </div>\n\n        </>\n    );\n};\n\nexport default Start;","/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/routes/finish/Finish.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/routes/board/Board.js",["112","113"],"import { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n\nimport { PokemonContext, Player2Context } from '../../../../context/pokemonContext';\nimport PokemonCard from '../../../../components/PokemonCard/PokemonCard';\nimport PlayerBoard from './component/PlayerBoard/PlayerBoard.js';\nimport Result from '../../../../components/Result/index';\nimport ArrowChoice from '../../../../components/ArrowChoice/index';\n\nimport s from './style.module.css';\n\nconst counterWin = (board, player1, player2) => {\n\n    let player1Count = player1.length;\n    let player2Count = player2.length;\n\n    board.forEach(item => {\n\n        if (item.card.possession === 'blue') {\n            player1Count++;\n        }\n        if (item.card.possession === 'red') {\n            player2Count++;\n        }\n    });\n\n    return [player1Count, player2Count];\n}\n\nconst BoardPage = () => {\n\n    const { pokemons } = useContext(PokemonContext);\n    const pokemonsPlyaer2 = useContext(Player2Context);\n\n    const [arrowActive, setArrowActive] = useState(true)\n    const [activePlayer, setActivePlayer] = useState(null)\n    const [board, setBoard] = useState([]);\n    const [player1, setPlayer1] = useState(() => {\n        return Object.values(pokemons).map((item) => ({\n            ...item,\n            possession: 'blue',\n        }));\n    });\n    const [player2, setPlayer2] = useState([]);\n    const [choiceCard, setChoiceCard] = useState(null)\n    const [steps, setSteps] = useState(0);\n\n    const history = useHistory();\n\n    useEffect(async () => {\n        const boardResponse = await fetch('https://reactmarathon-api.netlify.app/api/board');\n        const boardRequest = await boardResponse.json();\n\n        setBoard(boardRequest.data);\n\n        const boardPlayr2Response = await fetch('https://reactmarathon-api.netlify.app/api/create-player');\n        const boardPlayer2Request = await boardPlayr2Response.json();\n\n\n        setPlayer2(boardPlayer2Request.data.map((item) => ({\n            ...item,\n            possession: 'red',\n        })))\n        pokemonsPlyaer2.setPokemonsPlayer2(boardPlayer2Request.data);\n\n        setTimeout(() => {\n            const fristPlyaer = Math.floor(Math.random() * Math.floor(2));\n            setActivePlayer(fristPlyaer);\n        }, 3000)\n        setTimeout(() => setArrowActive(false), 5000);\n\n    }, []);\n\n\n\n    const handleClickOnBoard = async (position) => {\n\n        if (choiceCard) {\n            const params = {\n                position,\n                card: choiceCard,\n                board,\n            }\n\n            const res = await fetch('https://reactmarathon-api.netlify.app/api/players-turn', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(params),\n            });\n\n            const request = await res.json();\n\n            if (choiceCard.possession === 'blue') {\n                setPlayer1(prevState => prevState.filter(item => item.id !== choiceCard.id));\n\n            }\n\n            if (choiceCard.possession === 'red') {\n                setPlayer2(prevState => prevState.filter(item => item.id !== choiceCard.id));\n\n            }\n\n            setBoard(request.data);\n            setSteps(prevState => prevState + 1);\n            setActivePlayer(prevState => !prevState);\n            setChoiceCard(null);\n\n\n        }\n    }\n    const type = {};\n\n    if (steps === 9) {\n        const [count1, count2] = counterWin(board, player1, player2);\n        if (count1 > count2) {\n            type.value = 'win';\n        } else if (count1 < count2) {\n            type.value = 'lose';\n        } else {\n            type.value = 'draw';\n        }\n        setTimeout(() => history.replace('./finish'), 3500);\n\n    }\n\n\n    if (Object.keys(pokemons).length === 0) {\n        history.replace('/game');\n    }\n\n\n\n    return (\n        <div className={s.root}>\n            <div className={s.playerOne}>\n                {\n                    <PlayerBoard cards={player1}\n                        onClickCard={activePlayer ? (card) => setChoiceCard(card) : null}\n                        playerSelected={activePlayer && activePlayer !== null ? 'player1' : null}\n                        player={player1}\n                    />\n                }\n            </div>\n\n            <div className={s.board}>\n                {\n                    board.map((item) => (\n                        <div\n                            key={item.position}\n                            className={s.boardPlate}\n                            onClick={() => !item.card && handleClickOnBoard(item.position)}>\n                            {\n                                item.card && <PokemonCard {...item.card} isActive minimize />\n                            }\n                        </div>\n                    ))\n\n                }\n            </div>\n\n            {arrowActive ? <ArrowChoice side={activePlayer} /> : null}\n\n            {steps !== 9 ? null : (<Result type={type.value} />)}\n            <div className={s.playerTwo}>\n                {\n                    <PlayerBoard cards={player2}\n                        onClickCard={!activePlayer && activePlayer !== null ? (card) => setChoiceCard(card) : null}\n                        playerSelected={!activePlayer && activePlayer !== null ? 'player2' : null}\n                        player={player2}\n                    />\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default BoardPage; ","/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/PokemonCard/PokemonCard.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/routes/board/component/PlayerBoard/PlayerBoard.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/routes/Game/routes/finish/PlayerFinish/PlayerFinish.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Result/index.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/ArrowChoice/index.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/store/store.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/store/pokemon.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/service/firebase/firebaseContext.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/Modal/Modal.js",[],"/home/frol/Рабочий стол/FirstReactApp/first-app/src/components/LoginForm/LoginForm.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":30,"column":8,"nodeType":"120","endLine":30,"endColumn":10,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":51,"column":15,"nodeType":"123","endLine":73,"endColumn":6},{"ruleId":"118","severity":1,"message":"124","line":73,"column":8,"nodeType":"120","endLine":73,"endColumn":10,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'pokemonContext'. Either include them or remove the dependency array.","ArrayExpression",["128"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'pokemonsPlyaer2'. Either include it or remove the dependency array.",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [dispatch, pokemonContext]",{"range":"134","text":"135"},"Update the dependencies array to be: [pokemonsPlyaer2]",{"range":"136","text":"137"},[959,961],"[dispatch, pokemonContext]",[2355,2357],"[pokemonsPlyaer2]"]